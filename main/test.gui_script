local play_btn = nil
local load_btn = nil
local stop_btn = nil 
local unload_btn = nil

local musics = {
	blind_justice = {file= "/audio/blind_justice.mod", id=0},
	chiptune_3 = {file= "/audio/chiptune_3", id=0},
}

function init(self)
	msg.post(".", "acquire_input_focus")
	-- Add initialization code here
	-- Remove this function if not needed
	load_btn = gui.get_node("load_btn")
	play_btn = gui.get_node("play_btn")
	stop_btn = gui.get_node("stop_btn")
	unload_btn = gui.get_node("unload_btn")

	audio.build_path("/Users/selimanac/Development/Defold/Native Extension/defold-raudio/res/common")
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("click") and action.pressed  then
		if gui.pick_node(load_btn, action.x, action.y) then
			audio.load_music(musics["blind_justice"].file)
			print("Loaded")
		elseif gui.pick_node(play_btn, action.x, action.y) then
			print("Play Music")
			audio.play_music()
		elseif gui.pick_node(stop_btn, action.x, action.y) then
			print("Stop Music")
			audio.stop_music()
		elseif gui.pick_node(unload_btn, action.x, action.y) then
			print("UNload Music")
			audio.unload_music()
		end
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
